{"version":3,"sources":["types/FilterBy.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterBy","TodoList","todos","selectedTodoId","onSelect","className","map","todo","id","completed","title","type","onClick","TodoFilter","setFilteredBy","query","setQuery","onSubmit","e","preventDefault","onChange","event","target","value","all","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","onClose","useState","user","setUser","errorMessage","setErrorMessage","useEffect","userId","catch","href","email","name","App","setTodos","loading","setLoading","setSelectedTodo","filteredBy","Date","updateAt","setUpdateAt","finally","filteredTodos","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.906300de.chunk.js","sourcesContent":["export enum FilterBy {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport 'bulma/css/bulma.css';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId?: number | null;\n  onSelect?: (todo: Todo | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelect = () => { },\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr key={todo.id} data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          ) : (\n            <td className=\"is-vcentered\" />\n          )}\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={\n                todo.completed ? 'has-text-success' : 'has-text-danger'\n              }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            {todo.id === selectedTodoId ? (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(null)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            ) : (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { FilterBy } from '../../types/FilterBy';\n\ntype Props = {\n  query: string;\n  setFilteredBy: (filterBy: FilterBy) => void;\n  setQuery: (title: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilteredBy,\n  query,\n  setQuery,\n}) => {\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n  };\n\n  return (\n    <form className=\"field has-addons\" onSubmit={handleSubmit}>\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setFilteredBy(event.target.value as FilterBy)}\n          >\n            <option value={FilterBy.all}>All</option>\n            <option value={FilterBy.active}>Active</option>\n            <option value={FilterBy.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              aria-label=\"button\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo;\n  onClose?: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onClose = () => { },\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    if (selectedTodo.userId) {\n      getUser(selectedTodo.userId)\n        .then(setUser)\n        .catch(() => setErrorMessage('Error fetching user data'));\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            <button\n              aria-label=\"button\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n      {errorMessage && (\n        <p className=\"notification is-danger\">\n          {errorMessage}\n          <button type=\"button\" onClick={() => onClose(null)}>\n            Close\n          </button>\n        </p>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { FilterBy } from './types/FilterBy';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filteredBy, setFilteredBy] = useState(FilterBy.all);\n  const [query, setQuery] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [updateAt, setUpdateAt] = useState(new Date());\n\n  const filterTodos = () => {\n    return todos.filter((todo) => {\n      switch (filteredBy) {\n        case FilterBy.active:\n          return !todo.completed;\n        case FilterBy.completed:\n          return todo.completed;\n        default:\n          return true;\n      }\n    }).filter((todo) => {\n      return todo.title.toLowerCase().includes(query.toLowerCase());\n    });\n  };\n\n  function reload() {\n    setUpdateAt(new Date());\n    setErrorMessage('');\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .catch(() => setErrorMessage('Try again later'))\n      .finally(() => setLoading(false));\n  }, [updateAt]);\n\n  const filteredTodos = filterTodos();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilteredBy={setFilteredBy}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n              {!loading && !!todos.length && (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodoId={selectedTodo?.id}\n                  onSelect={setSelectedTodo}\n                />\n              )}\n\n              {errorMessage && (\n                <p className=\"notification is-danger\">\n                  {errorMessage}\n                  <button type=\"button\" onClick={reload}>\n                    Reload\n                  </button>\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onClose={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}